스프링 데이터 jpa를 사용하여 mysql 데이터베이스를 읽고 나머지 컨트롤러를 작성, 
마이그레이션을 전반 적으로 사용하고 

1. 이니셜라이즈 설정
추가 -> 스프링 데이터에 대해 jpa 추가, sql 추가
-> 마이그레이션을 위한 유동 기반 드라이버 -> Liquibase migration

2. 데이터 베이스를 생성 -> 터미널에서 mysql 설정.
database -> springboot_part4

3. 리로스 properties 에서  데이터 소스를 위해서 url 을 설정한다.
데이터베이스에 대한 드라이버 클래스 지정 -> 데이터 소스 드라이브 클래스 이름을 넣어준다.
사용자 정보 넣기 -> 비밀번호를 git에 넣지 않고 변수로 지정하여 설정하면 안전하다.

4. spring data database intilalization을 검색해서 스프링 데이터와 jpa를 사용할 수 있게 설정한다.
마이그레이션 액체 기반으로 활성화하고 um xml, uaml을 지원도 하며 저장되는 xml사용 변경 로그를 제공해야하므로 경로를 리소스 폴더를 기준으로 한다.
db/changelog/log.xml

5. google -> liquibase xml quickstart -> xml파일을 빠르게 스타트하는 법
log.xml에 헤더를 넣는다.

6. 동시에 마이그레이션을 수행하지 못하도록 하는 잠금 매커니즘이다.
잠금을 수동으로 해제해야함.

스프링 부트 애플리케이션을 만들어야함.

7. 네임과 키를 넣어주고 데이터베이스 관련된 옵션을 설정한다.
 
8. Account.kt 를 이용해 데이터베이스에 사용자 정보를 저장하는 컨트롤러를 작성한다.
엔티티라는 자바 종속성을 사용한다.
id 관련된 종속성을 넣어 jpa는 아이디를 생성하기 위해서 다른 전략을 사용 (자동증분)

9. 인터페이스 레포지토리를 이용해서 
저장소 유형, id유형을 활용

10, 값을 매핑하는 코드 작성

11. 보기 부분을 위한 코드 작성
아이디와 이름 보기 계정을 설정하고 데이터베이스와 보기를 분리하여 안전성확보.

12. findall을 이용해 함수를 적용시킨다.

13 포스트 맨을 이용해 계정이 없기에 빈 파일을 확인할 수 있고, json이 입력될 새코드를 작성한다.

14. postmapping 주석을 이용해서 각 create 아이디와 이름을 파일로 형태로 날릴 수 있다.
수신한 객체를 보기 계정으로 전환

15. 메서드 이름을 파생하여 화면에 값을 수신하는 것을 볼 수 있다.
google -> spring data query creation
스프링에서 사용할 수 있는 sql 쿼리문이 나타나있다.//STARTING_WITH

StartingWith, IsStartingWith, StartsWith